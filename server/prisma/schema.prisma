generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String  @unique
  email    String  @unique
  password String?
  role     String  @default("user")
  provider        String?  
  providerAccountId        String?  
  profilePicture  String?  
  refreshToken RefreshToken[] 
  collabRoom CollabRoom[]
  channelAdmin ChannelAdmin[]
  channelTeamMember ChannelTeamMember[]
  verified  Boolean  @default(false)
  collabRoomTeamMember CollabRoomTeamMember[]
  createdAt DateTime @default(now())
}

model RefreshToken {
  id         Int      @id @default(autoincrement())  
  token      String   @unique 
  userId     Int
  user       User     @relation(fields: [userId], references: [id], onDelete:Cascade)
  expiresAt  DateTime
  createdAt  DateTime @default(now())
}

model CollabRoom {
  id       Int     @id @default(autoincrement())
  companyName String
  adminName  String
  adminId    Int
  admin      User     @relation(fields: [adminId], references: [id])
  collabRoomTeamMember CollabRoomTeamMember[]
  channel Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model CollabRoomTeamMember{
  id       Int     @id @default(autoincrement())
  roomId Int 
  room  CollabRoom @relation(fields :[roomId], references:[id])
  profession String?
  userId Int
  user User @relation(fields : [userId] , references:[id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([userId, roomId])
} 

model Channel {
  id            Int       @id @default(autoincrement())
  name          String
  isPublic      Boolean   @default(false)
  collabRoomId  Int
  collabRoom    CollabRoom @relation(fields: [collabRoomId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  channelAdmins        ChannelAdmin[]
  channelTeamMembers   ChannelTeamMember[]
}

model ChannelAdmin {
  id        Int     @id @default(autoincrement())
  channelId Int
  channel   Channel @relation(fields: [channelId], references: [id])
  userId    Int
  user      User    @relation(fields: [userId], references: [id])

  @@unique([channelId, userId])
}

model ChannelTeamMember {
  id        Int     @id @default(autoincrement())
  channelId Int
  channel   Channel @relation(fields: [channelId], references: [id])
  userId    Int
  user      User    @relation(fields: [userId], references: [id])

  @@unique([channelId, userId])
}

