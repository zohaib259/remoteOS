// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String  @unique
  email    String  @unique
  password String?
  role     String  @default("user")
  provider        String?  
  providerAccountId        String?  
  profilePicture  String?  
  refreshToken RefreshToken[] 
  collabRoom CollabRoom[]
  verified  Boolean  @default(false)
  collabRoomsAsMember CollabRoom[] @relation("TeamMembers")
  createdAt DateTime @default(now())
}

model RefreshToken {
  id         Int      @id @default(autoincrement())  
  token      String   @unique 
  userId     Int
  user       User     @relation(fields: [userId], references: [id], onDelete:Cascade)
  expiresAt  DateTime
  createdAt  DateTime @default(now())
}

model CollabRoom {
  id       Int     @id @default(autoincrement())
  companyName String
  adminName  String
  teamMembers User[] @relation("TeamMembers")
  adminId    Int
  user      User     @relation(fields: [adminId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
